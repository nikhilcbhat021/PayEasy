# Base image
FROM node:22.15.0-alpine3.20 AS base
RUN apk update; \
apk add --no-cache libc6-compat openssl;
WORKDIR /app

# Args are from github-workflow.
# These are set as ENV vars to be used inside app. This is a better approach that copying .env file.
ARG FE_PORT
ENV FE_PORT=$FE_PORT
ARG AUTH_TRUST_HOST
ENV AUTH_TRUST_HOST=$AUTH_TRUST_HOST
ARG AUTH_SECRET
ENV AUTH_SECRET=$AUTH_SECRET
ARG AUTH_GITHUB_SECRET
ENV AUTH_GITHUB_SECRET=$AUTH_GITHUB_SECRET
ARG AUTH_GITHUB_ID
ENV AUTH_GITHUB_ID=$AUTH_GITHUB_ID
ARG CUSTOM_NAME__AUTH_GOOGLE_ID
ENV CUSTOM_NAME__AUTH_GOOGLE_ID=$CUSTOM_NAME__AUTH_GOOGLE_ID
ARG CUSTOM_NAME__AUTH_GOOGLE_SECRET
ENV CUSTOM_NAME__AUTH_GOOGLE_SECRET=$CUSTOM_NAME__AUTH_GOOGLE_SECRET
ARG AUTH_GOOGLE_ID
ENV AUTH_GOOGLE_ID=$AUTH_GOOGLE_ID
ARG AUTH_GOOGLE_SECRET
ENV AUTH_GOOGLE_SECRET=$AUTH_GOOGLE_SECRET
ARG ALLOWED_METHODS
ENV ALLOWED_METHODS=$ALLOWED_METHODS
ARG ALLOWED_ORIGIN
ENV ALLOWED_ORIGIN=$ALLOWED_ORIGIN
ARG ALLOWED_HEADERS
ENV ALLOWED_HEADERS=$ALLOWED_HEADERS
ARG MAX_AGE
ENV MAX_AGE=$MAX_AGE
ARG CREDENTIALS
ENV CREDENTIALS=$CREDENTIALS
ARG DOMAIN_URL
ENV DOMAIN_URL=$DOMAIN_URL
ARG DATABASE_URL
ENV DATABASE_URL=$DATABASE_URL

# Stage 1: Install dependencies
FROM base AS prune
RUN yarn global add turbo@2.4.4
COPY . .
RUN npx turbo@2.4.4 prune user-app --docker


FROM base AS installer
WORKDIR /app
# COPY --from=prune /app/out/yarn.lock /app/out/json/ ./
COPY --from=prune /app/out/json/ .
RUN yarn install --frozen-lockfile


# Stage 2: Build the application
FROM base AS builder
WORKDIR /app
# RUN npx turbo@2.4.4 prune user-app --docker
# WORKDIR /app/packages/db    --- is not required, as the db:generate should be run from /app.
COPY --from=installer /app/node_modules ./node_modules
COPY --from=prune /app/out/full/ ./
# Below line should be replaced with something else.....
# COPY --from=prune /app/apps/user-app/.env ./apps/user-app

COPY --from=prune /app/out/yarn.lock ./yarn.lock

# RUN DATABASE_URL=$DATABASE_URL npx prisma@6.5.0 generate --schema packages/db/prisma/schema.prisma
RUN npx prisma@6.5.0 generate --schema=./packages/db/prisma/schema.prisma
RUN cd /app/apps/user-app && yarn add sharp@0.32.6 && cd ../..
RUN npx turbo@2.4.4 run build --filter=user-app
RUN echo "Nikhil -- debug"
RUN echo $DATABASE_URL



# Stage 3: Prepare the final docker img
FROM base AS runner
WORKDIR /app

ARG FE_PORT
ENV FE_PORT=$FE_PORT
ARG AUTH_TRUST_HOST
ENV AUTH_TRUST_HOST=$AUTH_TRUST_HOST
ARG AUTH_SECRET
ENV AUTH_SECRET=$AUTH_SECRET
ARG AUTH_GITHUB_SECRET
ENV AUTH_GITHUB_SECRET=$AUTH_GITHUB_SECRET
ARG AUTH_GITHUB_ID
ENV AUTH_GITHUB_ID=$AUTH_GITHUB_ID
ARG CUSTOM_NAME__AUTH_GOOGLE_ID
ENV CUSTOM_NAME__AUTH_GOOGLE_ID=$CUSTOM_NAME__AUTH_GOOGLE_ID
ARG CUSTOM_NAME__AUTH_GOOGLE_SECRET
ENV CUSTOM_NAME__AUTH_GOOGLE_SECRET=$CUSTOM_NAME__AUTH_GOOGLE_SECRET
ARG AUTH_GOOGLE_ID
ENV AUTH_GOOGLE_ID=$AUTH_GOOGLE_ID
ARG AUTH_GOOGLE_SECRET
ENV AUTH_GOOGLE_SECRET=$AUTH_GOOGLE_SECRET
ARG ALLOWED_METHODS
ENV ALLOWED_METHODS=$ALLOWED_METHODS
ARG ALLOWED_ORIGIN
ENV ALLOWED_ORIGIN=$ALLOWED_ORIGIN
ARG ALLOWED_HEADERS
ENV ALLOWED_HEADERS=$ALLOWED_HEADERS
ARG MAX_AGE
ENV MAX_AGE=$MAX_AGE
ARG CREDENTIALS
ENV CREDENTIALS=$CREDENTIALS
ARG DOMAIN_URL
ENV DOMAIN_URL=$DOMAIN_URL
ARG DATABASE_URL
ENV DATABASE_URL=$DATABASE_URL

ENV NODE_ENV=production

# COPY --from=deps /app/node_modules ./node_modules
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nextjs
RUN mkdir .next && chown nextjs:nodejs .next
USER nextjs

# Copy only necessary files
# COPY --from=builder  /app/apps/user-app/dist ./apps/user-app/dist
# COPY --from=builder /app/apps/user-app/package.json ./apps/user-app/package.json
# COPY --from=deps /app/node_modules ./node_modules

COPY --from=builder --chown=nextjs:nodejs /app/apps/user-app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/apps/user-app/.next/static ./apps/user-app/.next/static
COPY --from=builder --chown=nextjs:nodejs /app/apps/user-app/public ./apps/user-app/public
####################### This is not supposed to be done. Environment variables should be sent in at run-time "-e KK=VV" or at build-time with "--build-arg" #######################
# COPY --from=builder --chown=nextjs:nodejs /app/apps/user-app/.env ./apps/user-app/

EXPOSE $FE_PORT
ENV PORT=$FE_PORT
RUN echo $DATABASE_URL
ENV HOSTNAME="0.0.0.0"

# CMD ["yarn", "start-user-app-prod"]
CMD [ "node", "apps/user-app/server.js" ]
# CMD ["npm", "run", "start-user-app", "--workspace=apps/user-app"]
